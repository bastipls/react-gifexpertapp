{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OAEI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAQ,IAE3BR,GAAe,SAACS,GAAD,OAAUP,GAAV,mBAAwBO,OACvCN,EAAc,OAOd,2BACAO,KAAK,OACLC,MAAOT,EACPU,SAnBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IAClB,+BAAKA,KCHJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAY,IAAD,EAGVd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IALwB,mBAG7BC,EAH6B,KAGtBC,EAHsB,KA6BpC,OApBAC,qBAAU,WAENxB,EAASC,GACRwB,MAAM,SAAAC,GAEHC,YAAW,WACPC,QAAQC,IAAIH,GACZH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAGb,UAIT,CAACpB,IAIIqB,ED1BuBQ,CAAc7B,GAAhCa,EAFuB,EAE5BN,KAAYa,EAFgB,EAEhBA,QAInB,OACI,oCACI,4BAAKpB,GACJoB,GAAW,yCAChB,yBAAKJ,UAAU,cAIPH,EAAOJ,KAAI,SAACC,GAAD,OAEP,kBAAC,EAAD,eACAoB,IAAMpB,EAAIC,IACND,UEQTqB,EA3BM,WACpB,IAAD,EAEuC7C,mBAAU,CAAC,cAFlD,mBAEW8C,EAFX,KAEsB/C,EAFtB,KAKA,OACI,oCACA,4CACA,kBAAC,EAAD,CAAcA,cAAiBA,IAC/B,6BAEA,4BAEQ+C,EAAWvB,KAAI,SAACT,GAAD,OAEP,kBAAC,EAAD,CACA8B,IAAK9B,EACLA,SAAWA,UChB/BiC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.02037ec9.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n//Se recive setCategories desde GifExpertApp\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=> {\r\n        setinputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // console.log('submit hecho')\r\n        if ( inputValue.trim().length >2 ){\r\n            \r\n            setCategories( (cats)=> [inputValue,...cats] );\r\n            setinputValue('');\r\n        }\r\n\r\n    }\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n      \r\n    )\r\n    \r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Ls8uIfqgcDqMhK4WHCGKV1fIXg8qM293`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    \r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n          <img src={url} alt={title} />\r\n            <p> {title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs( category );\r\n \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n           { loading && <p>Loading...</p> }\r\n        <div className=\"card-grid \">\r\n           \r\n                \r\n                {\r\n                images.map((img)=>(\r\n                    \r\n                    <GifGridItem  \r\n                    key= {img.id}\r\n                    {...img }\r\n                     />\r\n                ))\r\n                }\r\n                \r\n           \r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    \r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    \r\n\r\n    useEffect((  )=>{\r\n\r\n        getGifs( category  )\r\n        .then( imgs => {\r\n\r\n            setTimeout(() => {\r\n                console.log(imgs)\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n                \r\n            }, 3000);\r\n        })\r\n\r\n\r\n    },[category])\r\n\r\n\r\n\r\n    return state;\r\n    \r\n}","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nconst GifExpertApp = ()=>\r\n{\r\n    \r\n    const [categories,setCategories] = useState( ['One Punch']); \r\n\r\n\r\nreturn (\r\n    <>\r\n    <h2>GifExpertApp</h2>\r\n    <AddCategory  setCategories= { setCategories } />\r\n    <hr/>\r\n\r\n    <ol>\r\n        {\r\n            categories.map((category) =>\r\n                (\r\n                    <GifGrid\r\n                    key={category}\r\n                    category ={category} />\r\n                )\r\n                )\r\n        }\r\n    </ol>\r\n    </>\r\n)\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root'),\n);"],"sourceRoot":""}